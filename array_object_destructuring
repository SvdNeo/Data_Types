// Basic array destructuring
const numbers = [1, 2, 3];
const [x,y,z] = numbers;

console.log(x);  // Output: 1
console.log(y); // Output: 2
console.log(z);  // Output: 3

// Skipping elements in array destructuring
const colors = ['red', 'green', 'blue'];
const [, ,n ] = colors;

console.log(n); // Output: blue

// Rest parameter in array destructuring
const number = [1, 2, 3, 4, 5];
const [first, second, ...rest] = number;

console.log(first);  // Output: 1
console.log(second); // Output: 2
console.log(rest);   // Output: [3, 4, 5]

// Basic object destructuring
const person = { name: 'Alice', age: 30, city: 'Wonderland' };
const { name, age, city } = person;

console.log(name); // Output: Alice
console.log(age);  // Output: 30
console.log(city); // Output: Wonderland


const student = {fName:"sanjay",lName:"Dambal",age:35}
const{fName:first1,lName:last,age:year} = student
console.log(first1)
console.log(last);
console.log(year)

let [a, b, c] = "abc";
console.log(a)
console.log(b)

let [one, two, three] = new Set([1, 2, 3]);
console.log(one)

const config = [true];

// Assigning with a default value
let [isEnabled, timeout = 1000] = config;

console.log(isEnabled); // Output: true
console.log(timeout);   // Output: 1000 (default value)


//swapping
let x1 = "sanjay";
let x2 = "vinay";
[x1,x2] = [x2,x1]
console.log(x1)
console.log(x2)


let [named = "Guest",, surname = "Anonymous"] = ["Julius","Ceaser"];
console.log(named)
console.log(surname)

// let [names=prompt("name ?"),surnames = prompt("surname ?")] = ["Sanjay"]
// console.log(surnames)

let {height, width, title} = { title: "Menu", height: 200, width: 100 }
console.log(height)
console.log(title)


//task 1 destructuring an object
let user = {
    namez: "John",
    years: 30
  };
  let{namez,years:aged,isAdmin = false} = user
  console.log(namez);
  console.log(aged);
  console.log(isAdmin);

  let salaries = {
    "John": 100,
    "Pete": 300,
    "Mary": 250
  };
  function topSalary(salaries){
let maxSalary = 0;
let maxName = null
for(const [nam,sal] of Object.entries(salaries)){
if(sal>maxSalary){
    maxSalary = sal;
    maxName = nam;
}
}
return maxName
  }
  console.log(topSalary(salaries))